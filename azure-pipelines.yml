trigger: none
pr: none


parameters:
- name: buildPhpVersion
  displayName: Build PHP version
  type: string
  default: 7.4
- name: buildImageType
  displayName: Build image type
  type: string
  default: apache
- name: platforms
  displayName: Build platforms
  type: string
  default: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/386
- name: repository
  displayName: Repository name
  type: string
  default: jc5x/test-repository
- name: buildVersion
  displayName: Which version to build
  type: string
  default: develop

jobs:
- job: BuildFF3
  timeoutInMinutes: 360
  pool:
    vmImage: 'ubuntu-16.04'
    name: Default
  steps:
  - checkout: self
    persistCredentials: true
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes i
      docker buildx create --name firefly_iii_builder
      docker buildx inspect firefly_iii_builder --bootstrap
      docker buildx use firefly_iii_builder
    displayName: 'Set up builder'
  - script: |
      cd MainImage
      # label
      LABEL=${{ parameters.buildVersion }}

      # if the version is an alpha version, push to "alpha":
      if [[ ${{ parameters.buildVersion }} == *"alpha"* ]]; then
        LABEL="alpha"
      fi

      # if the version is a beta version, push to "beta":
      if [[ ${{ parameters.buildVersion }} == *"beta"* ]]; then
        LABEL="beta"
      fi

      if [[ ${{ parameters.buildVersion }} != *"beta"* && ${{ parameters.buildVersion }} != *"alpha"* && ${{ parameters.buildVersion }} != *"develop"* ]]; then
        LABEL="latest"
      fi


      # build $LABEL (develop, alpha, beta or latest)
      echo docker buildx build --platform ${{ parameters.platforms }} --build-arg version=${{ parameters.buildVersion }} --build-arg build_base=${{ parameters.buildImageType }} --build-arg build_platform=${{ parameters.buildPhpVersion }} -t ${{ parameters.repository }}:$LABEL --push . -f Dockerfile
      docker buildx build --platform ${{ parameters.platforms }} --build-arg version=${{ parameters.buildVersion }} --build-arg build_base=${{ parameters.buildImageType }} --build-arg build_platform=${{ parameters.buildPhpVersion }} -t ${{ parameters.repository }}:$LABEL --push . -f Dockerfile
    displayName: 'Build!'
